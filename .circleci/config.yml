version: 2.1

jobs:
  pytest-client:
    docker:
      - image: python:<<parameters.python_version>>
      - image: redis:<<parameters.redis_version>>
    parameters:
      hiredis:
        type: boolean
      python_version:
        type: string
      redis_version:
        type: string
    steps:
      - checkout
      - run: python3 -m pip install -r test_requirements.txt
      - when:
          condition: <<parameters.hiredis>>
          steps:
            - run: python3 -m pip install hiredis
      - run: python3 -m pytest tests/client/

  pytest-cluster:
    docker:
      - image: python:<<parameters.python_version>>
      - image: thekevjames/redis-cluster:<<parameters.redis_version>>
    parameters:
      hiredis:
        type: boolean
      python_version:
        type: string
      redis_version:
        type: string
    steps:
      - checkout
      - run: python3 -m pip install -r test_requirements.txt
      - when:
          condition: <<parameters.hiredis>>
          steps:
            - run: python3 -m pip install hiredis
      # TODO: avoid time-based check; instead, ping redis to check availability
      - run: sleep 10  # give the cluster some init time
      - run: python3 -m pytest tests/cluster/

workflows:
  run-jobs:
    jobs:
      - pytest-client:
          name: pytest-<<matrix.python_version>>-client-<<matrix.redis_version>>-hiredis-<<matrix.hiredis>>
          matrix:
            alias: pytest-client
            parameters:
              hiredis: [false, true]
              python_version: ['3.5', '3.6', '3.7', '3.8']
              redis_version: ['3', '4', '5', '6']

      - pytest-cluster:
          name: pytest-<<matrix.python_version>>-cluster-<<matrix.redis_version>>-hiredis-<<matrix.hiredis>>
          matrix:
            alias: pytest-cluster
            parameters:
              hiredis: [false, true]
              python_version: ['3.5', '3.6', '3.7', '3.8']
              # TODO: pin to latest builds
              redis_version: ['3.2.13', '4.0.14', '5.0.5', '6.0.12']
