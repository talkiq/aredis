version: 2.1

orbs:
  linter: talkiq/linter@1
  poetry: talkiq/poetry@2

jobs:
  pytest-client:
    docker:
      - image: python:<<parameters.python_version>>
      - image: redis:<<parameters.redis_version>>
    parameters:
      hiredis:
        type: boolean
      python_version:
        type: string
      redis_version:
        type: string
    steps:
      - run: python3 -m pip install poetry
      - checkout
      - run: poetry install -n
      - when:
          condition: <<parameters.hiredis>>
          steps:
            - run: poetry install -n -E hiredis
      - run: poetry run pytest tests/client/

  pytest-cluster:
    docker:
      - image: python:<<parameters.python_version>>
      - image: thekevjames/redis-cluster:<<parameters.redis_version>>
    parameters:
      hiredis:
        type: boolean
      python_version:
        type: string
      redis_version:
        type: string
    steps:
      - run: python3 -m pip install poetry
      - checkout
      - run: poetry install -n
      - when:
          condition: <<parameters.hiredis>>
          steps:
            - run: poetry install -n -E hiredis
      # TODO: avoid time-based check; instead, ping redis to check availability
      - run: sleep 10  # give the cluster some init time
      - run: poetry run pytest tests/cluster/

  build:
    docker:
      - image: python:<<parameters.python_version>>
    parameters:
      format:
        type: string
      python_version:
        type: string
    steps:
      - run: python3 -m pip install poetry
      - checkout
      - run: poetry install -n
      - run: poetry build -f <<parameters.format>>
      - persist_to_workspace:
          root: ./dist
          paths:
            - '*.tar.gz'
            - '*.whl'

  publish:
    docker:
      - image: python:<<parameters.python_version>>
    parameters:
      python_version:
        type: string
    steps:
      - run: python3 -m pip install poetry
      - checkout
      - run:
          name: validate tag matches pyproject.toml
          command:
            if [[ "${CIRCLE_TAG}" != *"$(poetry version | cut -d ' ' -f2)"* ]]; then
                echo "Version $(poetry version) does not match tag ${CIRCLE_TAG}";
                exit 1;
            fi
      - attach_workspace:
          at: ./dist
      - run: poetry publish -u $TWINE_USERNAME -p $TWINE_PASSWORD

workflows:
  run-jobs:
    jobs:
      - linter/pre-commit:
          filters:
            tags:
              only: /.*/
      - pytest-client:
          name: pytest-<<matrix.python_version>>-client-<<matrix.redis_version>>-hiredis-<<matrix.hiredis>>
          matrix:
            alias: pytest-client
            parameters:
              hiredis: [false, true]
              python_version: ['3.6', '3.7', '3.8', '3.9', '3.10']
              redis_version: ['3', '4', '5', '6']
          filters:
            tags:
              only: /.*/
      - pytest-cluster:
          name: pytest-<<matrix.python_version>>-cluster-<<matrix.redis_version>>-hiredis-<<matrix.hiredis>>
          matrix:
            alias: pytest-cluster
            parameters:
              hiredis: [false, true]
              python_version: ['3.6', '3.7', '3.8', '3.9', '3.10']
              # TODO: pin to latest builds
              redis_version: ['3.2.13', '4.0.14', '5.0.12', '6.2.1']
          filters:
            tags:
              only: /.*/

      - build:
          name: build-sdist
          format: sdist
          python_version: '3.10'
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - linter/pre-commit
            - pytest-client
            - pytest-cluster
      - build:
          name: build-wheel-<<matrix.python_version>>
          format: wheel
          matrix:
            alias: build-wheel
            parameters:
              python_version: ['3.6', '3.7', '3.8', '3.9', '3.10']
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - linter/pre-commit
            - pytest-client
            - pytest-cluster
      - publish:
          context: org-global
          python_version: '3.10'
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - build-sdist
            - build-wheel
